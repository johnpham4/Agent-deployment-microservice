apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "multi-agent-microservices.fullname" . }}
  labels:
    {{- include "multi-agent-microservices.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "multi-agent-microservices.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "multi-agent-microservices.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.service.targetPort }}
          protocol: TCP
        env:
        - name: MODEL_PATH
          value: {{ .Values.env.MODEL_PATH | quote }}
        - name: LOG_LEVEL
          value: {{ .Values.env.LOG_LEVEL | quote }}
        - name: DEBUG
          value: {{ .Values.env.DEBUG | quote }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        livenessProbe:
          httpGet:
            path: {{ .Values.healthCheck.path }}
            port: http
          initialDelaySeconds: {{ .Values.healthCheck.initialDelaySeconds }}
          periodSeconds: {{ .Values.healthCheck.periodSeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.healthCheck.path }}
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        {{- if .Values.persistence.enabled }}
        volumeMounts:
        - name: model-storage
          mountPath: /app/merged_model
        {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
      - name: model-storage
        persistentVolumeClaim:
          claimName: {{ include "multi-agent-microservices.fullname" . }}-pvc
      {{- end }}
